<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Summarization Web App</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <h1 class="text-center">Text Summarizer</h1>
        <div class="row justify-content-center">
            <div class="col-md-8">
                <form id="summarizeForm" method="post" action="/">
                    <div class="mb-3">
                        <label for="textInput" class="form-label">Enter Text to Summarize</label>
                        <textarea class="form-control" id="textInput" name="text" rows="5"></textarea>
                        <label for="numberInput" class="form-label">Enter number of Sentence</label>
                        <input class="form-control" id="numberInput" name="number">
                        <input type="radio" id="type1" name="type" value="frequency"> Frequency <br>
                        <details>
                            <summary> Read more </summary>
                            <p>This type of summary works best for text that is not too complicated. The advantage of this approach is that it more efficient than the textrank implementation. It was heavily inspired by this post.

Split the given text into sentences.

Preprocess the sentences by removing all punctuation and making all letters lowercase.

Make a list of all the words that occur in the text and find the frequency of the words.

Take the calculated frequencies of the words and calculate the total weight of the original sentences.</p>
                        </details>
                        <input type="radio" id="type2" name="type" value="textrank"> Text Rank <br>
                        <details>
                            <summary> Read more </summary>
                            <p>While this approach costs more in terms of time complexity, it is better for getting the summary of things like newspaper articles and essays. Read more about it here.

Split the given text into sentences.

Preprocess the sentences by removing all punctuation and making all letters lowercase.

Make a map of all of the sentences with the key being the sentences themselves and the values being an array of the nouns and adjactives in the sentence. ex. {"The Detroit Pistons are a good basketball team" => [detroit, pistons, good, basketball, team], "A basketball is round"=>[basketball, round]}

Make a weighted graph with edges that connect sentences with matching nouns or adjectives. The weight of each edge is the number of matching nouns and adjactives. In the example above, there would be two nodes connected with an edge of 1 for "basketball"

Choose a random starting point in the graph and "walk" through it many times using the weight of each edge as a probability of which next vertex to go to. For example, a node with two vertices with an edge of weight 4 and an edge of weight 3 would have a 4/7 chance to go to the first vertex and 3/7 chance to go to the other vertex.

A count is kept of how many times a node is walked on.

Sort the sentences.</p>
                        </details>

                    </div>
                    <button type="submit" class="btn btn-primary">Summarize</button>
                </form>
            </div>
        </div>
        <div class="row justify-content-center mt-4">
            <div class="col-md-8">
                <h3>Summarized Text</h3>
                <div id="summaryOutput" class="border p-3"> <% if(summary !== '') { %>
                    <%= summary %> 
                    <% } else { %>
                        No output
                    <% } %>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Your custom JavaScript code -->
</body>
</html>

